#!/usr/bin/env python

import win32gui
import win32api
import win32con
import array
import struct
import pywinauto

class OutputHandler():
	
	def send_backspaces(self, number_of_backspaces):
        for _ in xrange(number_of_backspaces):
            win32api.SendMessage(self.hwndEdit, win32con.WM_CHAR, VK_BACK, 0)

    def send_string(self, s):
    	for char in s:
        	win32api.SendMessage(self.hwndEdit, win32con.WM_CHAR, ord(char), 0)

    def send_key_combination(self, s):
        ##

    def get_open_windows(self):
    	self.windows = dict()
    	win32gui.EnumWindows(enumHandler, None)
    	return self.windows

	def enumHandler(hwnd, lParam):
        if win32gui.IsWindowVisible(hwnd):
            if win32gui.GetClassName(hwnd) is not '':
                self.windows.[win32gui.GetClassName(hwnd)] = win32gui.GetWindowText(hwnd)

    def set_output_location(self, windowname):
    	self.hwndMain = win32gui.FindWindow( windowname, self.windows[windowname])
    	self.hwndEdit = win32gui.FindWindowEx( self.hwndMain, 0, None, None )
    